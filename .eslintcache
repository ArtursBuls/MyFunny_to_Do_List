[{"C:\\Codelex\\ReactReact\\1\\todotodo\\src\\index.tsx":"1","C:\\Codelex\\ReactReact\\1\\todotodo\\src\\reportWebVitals.ts":"2","C:\\Codelex\\ReactReact\\1\\todotodo\\src\\components\\cardToDo.tsx":"3","C:\\Codelex\\ReactReact\\1\\todotodo\\src\\ToDoo.tsx":"4"},{"size":517,"mtime":1607871333446,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":564,"mtime":1607864440071,"results":"8","hashOfConfig":"6"},{"size":3089,"mtime":1608049908584,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1w6c2k5",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"C:\\Codelex\\ReactReact\\1\\todotodo\\src\\index.tsx",[],["21","22"],"C:\\Codelex\\ReactReact\\1\\todotodo\\src\\reportWebVitals.ts",[],"C:\\Codelex\\ReactReact\\1\\todotodo\\src\\components\\cardToDo.tsx",[],["23","24"],"C:\\Codelex\\ReactReact\\1\\todotodo\\src\\ToDoo.tsx",["25"],"import React, { useEffect, useState } from 'react';\nimport 'flexboxgrid';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CardToDo } from './components/cardToDo';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport style from './ToDo.module.scss';\n\ntoast.configure()\nfunction ToDoList() {\n\n  const [inputText, setInputText] = useState('');\n  const [toDoList, setToDoList] = useState<string[]>(\n    ['Pamosties no rƒ´ta teicamƒÅ garastƒÅvoklƒ´!',\n      'Ieƒìst brokastis un iedzert rƒ´ta kafiju!',\n      'Codelex rulƒì, nosƒìdƒìt pie datora visu dienu. Izpildƒ´t visus majas darbus!',\n      'KƒÅ man bie≈æi gadƒÅs - nosƒìdƒìt visu dienu pie datora un tupƒ´t kƒÅ traks.' +\n      ' RezultƒÅtƒÅ - nekas nav izdarƒ´ts. Waisted!'\n    ]);\n  const [textColors, setTextColors] = useState<string>('');\n  useEffect(() => {\n    function notify() {\n      toast.info('≈†aujam gaisƒÅ..üåüüåüüåü..Yohooo..!üòé', { position: toast.POSITION.TOP_CENTER })\n    }; notify();\n  }, [])\n\n  const addListHandler = () => {\n    if (inputText) {\n      const newList = [inputText, ...toDoList];\n      setToDoList(newList);\n      setInputText('');\n    }\n  }\n\n  const deleteHandler = (index: number) => {\n    const clonedList = [...toDoList];\n    clonedList.splice(index, 1);\n    setToDoList(clonedList);\n  }\n\n  useEffect(() => {\n    const currAvtiveColor = textColors;\n    if (currAvtiveColor === '') { setTextColors('green') }\n    else if (currAvtiveColor === 'green') { setTextColors('blue') }\n    else if (currAvtiveColor === 'blue') { setTextColors('yellow') }\n    else if (currAvtiveColor === 'yellow') { setTextColors('red') }\n    else { setTextColors('green') };\n\n  }, [toDoList]);\n\n  return (\n    <section>\n      <div className=\"row center-xs\">\n        <div className=\"col-xs-12\">\n          <h2 className={style.headmain}>\n            To Doo... jahuuu....\n          </h2>\n          <h3\n            className={style.christmas}\n            style={{ color: textColors }}\n          >\n            Merry Christmas!\n          </h3>\n        </div>\n      </div>\n      <div className=\"row center-xs\">\n        <div className=\"col-xs-12\">\n          <input\n            type=\"text\"\n            value={inputText}\n            className={style.input}\n            placeholder=\"Please, write here...\"\n            onChange={(e) => setInputText(e.target.value)}\n          />\n          <button\n            className={style.button}\n            onClick={addListHandler}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n      <br />\n      <div className=\"row center-xs\">\n        <div className=\"col-xs-6\">\n          <div className={style.mainWrapper}>\n            {toDoList.map((item, index) => (\n              <div\n                className={style.cardWrapper}\n                key={uuidv4()}>\n                <CardToDo\n                  listItem={item}\n                  deleteHandler={() => deleteHandler(index)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default ToDoList;\n",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"26","replacedBy":"30"},{"ruleId":"28","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":49,"column":6,"nodeType":"34","endLine":49,"endColumn":16,"suggestions":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],["36"],["37"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'textColors'. Either include it or remove the dependency array.","ArrayExpression",["38"],"no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [textColors, toDoList]",{"range":"41","text":"42"},[1661,1671],"[textColors, toDoList]"]